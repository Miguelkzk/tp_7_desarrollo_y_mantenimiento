name: CI

on:
  workflow_dispatch: {}
  pull_request:
    branches: [develop]
  push:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.1'
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Run RuboCop
        run: |
          bundle exec rubocop --force-exclusion app config lib test Gemfile Rakefile --fail-level error
          # solo falla si hay error grave
          # bundle exec rubocop --force-exclusion app config lib test Gemfile Rakefile

      # aplica un formateado para las autocorreciones
      # si se detectan cambios, falla y se pide que se los aplique correctamente
      - name: Run RuboCop auto-correct check (does not commit)
        run: |
          bundle exec rubocop -A --force-exclusion app config lib test Gemfile Rakefile || true
          if [ -n "$(git status --porcelain)" ]; then
            echo "::error::RuboCop applied autocorrections to the working tree."
            echo "Files changed by RuboCop autocorrect:"
            git --no-pager diff --name-only
            echo "::error::Run 'bundle exec rubocop -A' locally, review the changes and commit them."
            git --no-pager diff --name-only
            exit 1
          else
            echo "No autocorrections detected."
          fi
          bundle exec rubocop -A --force-exclusion app config lib test Gemfile Rakefile || true
          if [ -n "$(git status --porcelain)" ]; then
            echo "::warning::RuboCop applied autocorrections in CI. Run 'bundle exec rubocop -A' locally and commit the changes."
            git --no-pager diff --name-only
          else
            echo "No autocorrections detected."
          fi
      - name: Prepare DB (test)
        env:
          RAILS_ENV: test
        run: |
          mkdir -p tmp/storage
          RAILS_ENV=test bin/rails db:prepare

      - name: Run tests
        run: |
          bin/rails test